/*
	Class to deal with SVG files generated by INBWorkflowLauncher
	(which have an internal injected trampoline)
*/

function TavernaSVG(/* optional */ nodeid,url,bestScale,thedoc) {
	this._svgloadtimer = undefined;
	this.svgid = undefined;
	
	if(nodeid && url) {
		this.loadSVG(nodeid,url,bestScale,thedoc);
	}
}

TavernaSVG.W3CDOM = (document.createElement && document.getElementsByTagName);

TavernaSVG.prototype = {
	removeSVG: function (/* optional */ thedoc) {
		// Before any creation, clear SVG trampoline and SVG object traces!
		if(this.svgid) {
			if(!thedoc)  thedoc=document;
			// First, kill timer (if any!)
			if(this._svgloadtimer) {
				clearInterval(this._svgloadtimer);
				this._svgloadtimer=undefined;
				delete window['SVGtramp'];
			}
			// Second, remove trampoline
			delete this['SVGtramp'];
			// Third, remove previous SVG
			var svgobj = thedoc.getElementById(this.svgid);
			if(svgobj) {
				try {
					svgobj.parentNode.removeChild(svgobj);
				} catch(e) {
					// Be silent about failures!
				}
			}
			// And any trace!
			svgobj=undefined;
			this.svgid=undefined;
		}
	},

	SVGrescale: function (len,/* optional */ thedoc) {
		if('SVGtramp' in this) {
			if(!thedoc)  thedoc=document;
			this.SVGtramp.setBestScaleFromConstraintDimensions(len,len);
        		if (!TavernaSVG.W3CDOM) return;

			var box = thedoc.getElementById(this.svgid);
			if(box) {
				box.style.width  = this.SVGtramp.width;
				box.style.height = this.SVGtramp.height;
			}
		}
	},

	loadSVG: function (nodeid,url,/* optional */ bestScale,thedoc) {
		if(!thedoc)  thedoc=document;
		this.removeSVG(thedoc);
		
		if(!bestScale)  bestScale='400px';
		// Now it is time to generate a new SVG object
		var node=thedoc.getElementById(nodeid);
		var gensvgid;

		if(node) {
			gensvgid = WidgetCommon.getRandomUUID();
			var objres=thedoc.createElement('object');

			objres.setAttribute("type","image/svg+xml");
			objres.setAttribute("wmode","transparent");
			objres.setAttribute("style","overflow: hidden; border: 1px dotted #000;");
			objres.setAttribute("data",url);
			objres.id=gensvgid;

			/* This one has been commented out because it was injecting two SVG loads in Firefox!

			var paramres=document.createElement('param');
			paramres.setAttribute("name","src");
			paramres.setAttribute("value",url);
			paramres.setAttribute("wmode","transparent");
			paramres.setAttribute("type","image/svg+xml");

			objres.appendChild(paramres);
			*/

			var embedres=thedoc.createElement('embed');
			embedres.setAttribute("src",url);
			embedres.setAttribute("type","image/svg+xml");
			embedres.setAttribute("pluginspage","http://www.adobe.com/svg/viewer/install/");
			embedres.innerHTML="This browser is not able to show SVG: <a href='http://getfirefox.com'>http://getfirefox.com</a> is free and does it! If you use Internet Explorer, you can also get a plugin: <a href='http://www.adobe.com/svg/viewer/install/main.html'>http://www.adobe.com/svg/viewer/install/main.html</a>";
			
			objres.appendChild(embedres);
			
			node.appendChild(objres);
		}
		
		this._svgloadtimer=setInterval(function() {
			// Transferring the trampoline!
			if ('SVGtramp' in window) {
				clearInterval(this._svgloadtimer);
				this.SVGtramp=window['SVGtramp'];
				delete window['SVGtramp'];
				this.SVGrescale(bestScale);
				this._svgloadtimer=undefined;
			}
		},100);
		
		return gensvgid;
	},
}
