<PUBLIC:COMPONENT>
<PUBLIC:ATTACH event="onmouseout" handler="doMouseDefault" />
<PUBLIC:ATTACH event="onmouseup" handler="doMouseDefault" />
<PUBLIC:ATTACH event="onmousedown" handler="doMouseDown" />
<PUBLIC:ATTACH event="onmouseover" handler="doMouseOver" />
<PUBLIC:ATTACH event="onmouseup" handler="doMouseOver" />
<PUBLIC:ATTACH event="onselectstart" handler="doNoSelect" />

<SCRIPT LANGUAGE="JScript">
/*
	$Id$
	hover.htc
	from INB Interactive Web Workflow Enactor & Manager (IWWE&M)
	Author: José María Fernández González (C) 2007-2008
	Institutions:
	*	Spanish National Cancer Research Institute (CNIO, http://www.cnio.es/)
	*	Spanish National Bioinformatics Institute (INB, http://www.inab.org/)

	IWWE&M is free software: you can redistribute it and/or modify
	it under the terms of the GNU Affero General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	IWWE&M is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Affero General Public License for more details.

	You should have received a copy of the GNU Affero General Public License
	along with IWWE&M.  If not, see <http://www.gnu.org/licenses/agpl.txt>.

	Original IWWE&M concept, design and coding done by José María Fernández González, INB (C) 2008.
	Source code of IWWE&M is available at http://trac.bioinfo.cnio.es/trac/iwwem
*/
var classDefault = element.className;
var classDefaultBase;
if(classDefault.indexOf(" ")!=-1) {
	classDefaultBase = classDefault.substr(0,classDefault.indexOf(" "));
} else {
	classDefaultBase = classDefault;
}
var classDefaultBaseActive=classDefaultBase+'active';
var classDefaultBaseHover=classDefaultBase+'hover';
var classDefaultBaseChecked=classDefaultBase+'checked';
var isButton=classDefault.indexOf('button')!=-1;
var isRadio=classDefault.indexOf('radio')!=-1;

function doEffect() {
	switch (event.type) {
		case "mousedown":
			element.className = classDefault + " "+ classDefaultBaseActive;
			break;
		case "mouseup":
		case "mouseover":
			element.className = classDefault + " " + classDefaultBaseHover;
			break;
		default:
			element.className = classDefault;
			break;
	}
}

function doMouseDown() {
	var target = event.srcElement;
	if(isButton && target.className.indexOf(classDefaultBase)!=-1) {
		target.className = classDefault + " "+ classDefaultBaseActive;
	}
}

function doMouseOver() {
	var target = event.srcElement;
	if(target.className.indexOf(classDefaultBase)!=-1 && (isButton || target.className.indexOf(classDefaultBaseChecked)==-1)) {
		target.className = classDefault + " " + classDefaultBaseHover;
	}
}

function doMouseDefault() {
	var target = event.srcElement;
	if(target.className.indexOf(classDefaultBase)!=-1 && (isButton || target.className.indexOf(classDefaultBaseChecked)==-1)) {
		target.className = classDefault;
	}
}

function doNoSelect() {
	return false;
}

</SCRIPT>
</PUBLIC:COMPONENT>
