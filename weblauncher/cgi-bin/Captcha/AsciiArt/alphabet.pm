#!/usr/bin/perl -W

use strict;

package Captcha::AsciiArt;

use vars qw(%FONT);


# $Id: ascii_art_captcha_font_alphabet.inc,v 1.2 2007/09/18 21:13:22 soxofaan Exp $
# Font definition based on figlet font "alphabet" (http://www.figlet.org/)
# as distributed by pyfiglet (http://sourceforge.net/projects/pyfiglet/)

%FONT=(
  
  'height' => 7,
  'name' => 'alphabet',
  'comment' => 'Alphabet by Wendell Hicken 11/93 (whicken@parasoft.com)Explanation of first line:flf2 - "magic number" for file identificationa    - should always be `a\', for now$    - the "hardblank" -- prints as a blank, but can\'t be smushed6    - height of a character5    - height of a character, not including descenders20   - max line length (excluding comment lines) + a fudge factor15   - default smushmode for this font (like "-m 15" on command line)12   - number of comment lines',
  'a' => [
    '    ',
    '    ',
    ' aa ',
    'a a ',
    'aaa ',
    '    ',
    '    ',
  ],
  'b' => [
    'b    ',
    'b    ',
    'bbb  ',
    'b  b ',
    'bbb  ',
    '     ',
    '     ',
  ],
  'c' => [
    '     ',
    '     ',
    ' ccc ',
    'c    ',
    ' ccc ',
    '     ',
    '     ',
  ],
  'd' => [
    '   d ',
    '   d ',
    ' ddd ',
    'd  d ',
    ' ddd ',
    '     ',
    '     ',
  ],
  'e' => [
    '    ',
    '    ',
    'eee ',
    'e e ',
    'ee  ',
    '    ',
    '    ',
  ],
  'f' => [
    ' ff ',
    ' f  ',
    'fff ',
    ' f  ',
    ' f  ',
    '    ',
    '    ',
  ],
  'g' => [
    '    ',
    '    ',
    'ggg ',
    'g g ',
    'ggg ',
    '  g ',
    'ggg ',
  ],
  'h' => [
    'h    ',
    'h    ',
    'hhh  ',
    'h  h ',
    'h  h ',
    '     ',
    '     ',
  ],
  'i' => [
    '   ',
    'ii ',
    '   ',
    'ii ',
    'ii ',
    '   ',
    '   ',
  ],
  'j' => [
    '     ',
    '   j ',
    '     ',
    '   j ',
    '   j ',
    'j  j ',
    ' jj  ',
  ],
  'k' => [
    'k    ',
    'k k  ',
    'kk   ',
    'k k  ',
    'k  k ',
    '     ',
    '     ',
  ],
  'l' => [
    'l ',
    'l ',
    'l ',
    'l ',
    'l ',
    '  ',
    '  ',
  ],
  'm' => [
    '      ',
    '      ',
    'mmmm  ',
    'm m m ',
    'm m m ',
    '      ',
    '      ',
  ],
  'n' => [
    '     ',
    '     ',
    'nnn  ',
    'n  n ',
    'n  n ',
    '     ',
    '     ',
  ],
  'o' => [
    '    ',
    '    ',
    'ooo ',
    'o o ',
    'ooo ',
    '    ',
    '    ',
  ],
  'p' => [
    '     ',
    '     ',
    'ppp  ',
    'p  p ',
    'ppp  ',
    'p    ',
    'p    ',
  ],
  'q' => [
    '      ',
    '      ',
    ' qqq  ',
    'q  q  ',
    ' qqq  ',
    '   q  ',
    '   qq ',
  ],
  'r' => [
    '    ',
    '    ',
    'rrr ',
    'r   ',
    'r   ',
    '    ',
    '    ',
  ],
  's' => [
    '    ',
    '    ',
    ' ss ',
    ' s  ',
    'ss  ',
    '    ',
    '    ',
  ],
  't' => [
    ' t  ',
    ' t  ',
    'ttt ',
    ' t  ',
    ' tt ',
    '    ',
    '    ',
  ],
  'u' => [
    '     ',
    '     ',
    'u  u ',
    'u  u ',
    ' uuu ',
    '     ',
    '     ',
  ],
  'v' => [
    '    ',
    '    ',
    'v v ',
    'v v ',
    ' v  ',
    '    ',
    '    ',
  ],
  'w' => [
    '      ',
    '      ',
    'w   w ',
    'w w w ',
    ' w w  ',
    '      ',
    '      ',
  ],
  'x' => [
    '    ',
    '    ',
    'x x ',
    ' x  ',
    'x x ',
    '    ',
    '    ',
  ],
  'y' => [
    '     ',
    '     ',
    'y  y ',
    'y  y ',
    ' yyy ',
    '   y ',
    'yyy  ',
  ],
  'z' => [
    '    ',
    '    ',
    'zz  ',
    ' z  ',
    ' zz ',
    '    ',
    '    ',
  ],
  'A' => [
    ' AA  ',
    'A  A ',
    'AAAA ',
    'A  A ',
    'A  A ',
    '     ',
    '     ',
  ],
  'B' => [
    'BBBB  ',
    'B   B ',
    'BBBB  ',
    'B   B ',
    'BBBB  ',
    '      ',
    '      ',
  ],
  'C' => [
    ' CCC ',
    'C    ',
    'C    ',
    'C    ',
    ' CCC ',
    '     ',
    '     ',
  ],
  'D' => [
    'DDD  ',
    'D  D ',
    'D  D ',
    'D  D ',
    'DDD  ',
    '     ',
    '     ',
  ],
  'E' => [
    'EEEE ',
    'E    ',
    'EEE  ',
    'E    ',
    'EEEE ',
    '     ',
    '     ',
  ],
  'F' => [
    'FFFF ',
    'F    ',
    'FFF  ',
    'F    ',
    'F    ',
    '     ',
    '     ',
  ],
  'G' => [
    ' GGG  ',
    'G     ',
    'G  GG ',
    'G   G ',
    ' GGG  ',
    '      ',
    '      ',
  ],
  'H' => [
    'H  H ',
    'H  H ',
    'HHHH ',
    'H  H ',
    'H  H ',
    '     ',
    '     ',
  ],
  'I' => [
    'III ',
    ' I  ',
    ' I  ',
    ' I  ',
    'III ',
    '    ',
    '    ',
  ],
  'J' => [
    '    J ',
    '    J ',
    '    J ',
    'J   J ',
    ' JJJ  ',
    '      ',
    '      ',
  ],
  'K' => [
    'K  K ',
    'K K  ',
    'KK   ',
    'K K  ',
    'K  K ',
    '     ',
    '     ',
  ],
  'L' => [
    'L    ',
    'L    ',
    'L    ',
    'L    ',
    'LLLL ',
    '     ',
    '     ',
  ],
  'M' => [
    'M   M ',
    'MM MM ',
    'M M M ',
    'M   M ',
    'M   M ',
    '      ',
    '      ',
  ],
  'N' => [
    'N   N ',
    'NN  N ',
    'N N N ',
    'N  NN ',
    'N   N ',
    '      ',
    '      ',
  ],
  'O' => [
    ' OOO  ',
    'O   O ',
    'O   O ',
    'O   O ',
    ' OOO  ',
    '      ',
    '      ',
  ],
  'P' => [
    'PPPP  ',
    'P   P ',
    'PPPP  ',
    'P     ',
    'P     ',
    '      ',
    '      ',
  ],
  'Q' => [
    ' QQQ   ',
    'Q   Q  ',
    'Q   Q  ',
    'Q  QQ  ',
    ' QQQQ  ',
    '     Q ',
    '       ',
  ],
  'R' => [
    'RRRR  ',
    'R   R ',
    'RRRR  ',
    'R R   ',
    'R  RR ',
    '      ',
    '      ',
  ],
  'S' => [
    ' SSS  ',
    'S     ',
    ' SSS  ',
    '    S ',
    'SSSS  ',
    '      ',
    '      ',
  ],
  'T' => [
    'TTTTTT ',
    '  TT   ',
    '  TT   ',
    '  TT   ',
    '  TT   ',
    '       ',
    '       ',
  ],
  'U' => [
    'U   U ',
    'U   U ',
    'U   U ',
    'U   U ',
    ' UUU  ',
    '      ',
    '      ',
  ],
  'V' => [
    'V     V ',
    'V     V ',
    ' V   V  ',
    '  V V   ',
    '   V    ',
    '        ',
    '        ',
  ],
  'W' => [
    'W     W ',
    'W     W ',
    'W  W  W ',
    ' W W W  ',
    '  W W   ',
    '        ',
    '        ',
  ],
  'X' => [
    'X   X ',
    ' X X  ',
    '  X   ',
    ' X X  ',
    'X   X ',
    '      ',
    '      ',
  ],
  'Y' => [
    'Y   Y ',
    ' Y Y  ',
    '  Y   ',
    '  Y   ',
    '  Y   ',
    '      ',
    '      ',
  ],
  'Z' => [
    'ZZZZZ ',
    '   Z  ',
    '  Z   ',
    ' Z    ',
    'ZZZZZ ',
    '      ',
    '      ',
  ],
  '0' => [
    ' 000  ',
    '0  00 ',
    '0 0 0 ',
    '00  0 ',
    ' 000  ',
    '      ',
    '      ',
  ],
  '1' => [
    ' 11  ',
    '111  ',
    ' 11  ',
    ' 11  ',
    '11l1 ',
    '     ',
    '     ',
  ],
  '2' => [
    ' 22  ',
    '2  2 ',
    '  2  ',
    ' 2   ',
    '2222 ',
    '     ',
    '     ',
  ],
  '3' => [
    '333  ',
    '   3 ',
    ' 33  ',
    '   3 ',
    '333  ',
    '     ',
    '     ',
  ],
  '4' => [
    '4  4 ',
    '4  4 ',
    '4444 ',
    '   4 ',
    '   4 ',
    '     ',
    '     ',
  ],
  '5' => [
    '5555 ',
    '5    ',
    '555  ',
    '   5 ',
    '555  ',
    '     ',
    '     ',
  ],
  '6' => [
    '  6   ',
    ' 6    ',
    '6666  ',
    '6   6 ',
    ' 666  ',
    '      ',
    '      ',
  ],
  '7' => [
    '77777 ',
    '   7  ',
    '  7   ',
    '  7   ',
    '  7   ',
    '      ',
    '      ',
  ],
  '8' => [
    ' 888  ',
    '8   8 ',
    ' 888  ',
    '8   8 ',
    ' 888  ',
    '      ',
    '      ',
  ],
  '9' => [
    ' 9999 ',
    '9   9 ',
    ' 9999 ',
    '   9  ',
    '  9   ',
    '      ',
    '      ',
  ],

  
);

1;
